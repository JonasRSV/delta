DROP TABLE IF EXISTS DOCUMENT CASCADE;
DROP TABLE IF EXISTS MOTION;
DROP TABLE IF EXISTS POST;
DROP TABLE IF EXISTS VISITOR;
DROP TABLE IF EXISTS COMMENT;
DROP TABLE IF EXISTS POST_OPINIONS;
DROP TABLE IF EXISTS COMMENT_OPINIONS;
DROP TABLE IF EXISTS PARTY;
DROP TABLE IF EXISTS DEPARTMENT;
DROP TABLE IF EXISTS POLITICIAN;

-- To generate unique ID's for posts
CREATE EXTENSION "uuid-ossp";

-- Can make some funnier random name generation
CREATE FUNCTION DEFAULT_NAME() RETURNS VARCHAR(255) AS $$
    SELECT 'smith';
$$ LANGUAGE SQL;


CREATE TABLE DOCUMENT (
    ID VARCHAR(255) PRIMARY KEY,
    TIME DATE NOT NULL,
    TITLE TEXT NOT NULL,
    DOCUMENT TEXT NOT NULL,
    TYPE TEXT NOT NULL
);


CREATE TABLE MOTION (
  ID VARCHAR(255) REFERENCES document (id),
  SUMMARY TEXT NOT NULL,
  PARTY TEXT NOT NULL
);


-- USER is a reserved keyword
CREATE TABLE VISITOR (
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v1mc(),
    NAME VARCHAR(255) DEFAULT DEFAULT_NAME(),
    PW_HASH VARCHAR(255),
    EMAIL VARCHAR(255),
    LAST_LOGIN DATE
);


CREATE TABLE POST (
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v1mc(),
    TITLE TEXT NOT NULL,
    POST TEXT NOT NULL,
    OWNER UUID REFERENCES visitor (id)
    
    -- Add more fields such as Post owner etc..
);


CREATE TABLE COMMENT (
  ID SERIAL PRIMARY KEY,
  POST_ID UUID REFERENCES post (id),
  AUTHOR_ID UUID REFERENCES visitor (id),
  CONTENT TEXT NOT NULL,
  TIME DATE NOT NULL
);


CREATE TABLE POST_OPINIONS (
  POST UUID REFERENCES post (id),
  OPINION_HOLDER UUID REFERENCES visitor (id),
  OPINION SMALLINT
);


CREATE TABLE COMMENT_OPINIONS (
  COMMENT SERIAL REFERENCES COMMENT (id),
  OPINION_HOLDER UUID REFERENCES visitor(id),
  OPINION SMALLINT
);


CREATE TABLE PARTY (
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v1mc(),
    NAME TEXT
);

CREATE TABLE DEPARTMENT (
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v1mc(),
    NAME TEXT
);

CREATE TABLE POLITICIAN (
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v1mc(),
    PARTY_AFFILIATION UUID REFERENCES party (id),
    DEPARTMENT_AFFILIATION UUID REFERENCES DEPARTMENT (id),
    NAME TEXT
);






-- F책r implementera n책gon riktig grej sen som dynamiskt skapar anv채ndare eller n책tt
CREATE USER SCRAPERS WITH PASSWORD '123';

REVOKE ALL ON TABLE DOCUMENT FROM SCRAPERS;
REVOKE ALL ON TABLE MOTION FROM SCRAPERS;
REVOKE ALL ON TABLE VISITOR FROM SCRAPERS;
REVOKE ALL ON TABLE POST FROM SCRAPERS;
REVOKE ALL ON TABLE COMMENT FROM SCRAPERS;
REVOKE ALL ON TABLE POST_OPINIONS FROM SCRAPERS;
REVOKE ALL ON TABLE COMMENT_OPINIONS FROM SCRAPERS;
REVOKE ALL ON TABLE PARTY FROM SCRAPERS;
REVOKE ALL ON TABLE DEPARTMENT FROM SCRAPERS;
REVOKE ALL ON TABLE POLITICIAN FROM SCRAPERS;

GRANT INSERT ON TABLE DOCUMENT TO SCRAPERS;
GRANT INSERT ON TABLE MOTION TO SCRAPERS;


CREATE USER DELTA WITH PASSWORD '012';

REVOKE ALL ON TABLE DOCUMENT FROM DELTA;
REVOKE ALL ON TABLE MOTION FROM DELTA;

GRANT SELECT ON TABLE DOCUMENT TO DELTA;
GRANT SELECT ON TABLE MOTION TO DELTA;

